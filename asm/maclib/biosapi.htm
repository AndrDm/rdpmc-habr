<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='biosapi.htm macro library'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>biosapi.htm macro library</title>
</head>
<body class='MACLIB' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>biosapi.htm
<br/><i>Enumerations</i>
<br/><a href="#pcColors">%Colors</a>
<br/><i>Macro</i>
<br/><a href="#BiosAPI">BiosAPI</a>
</h1>
<p>This file declares OS-independent macroinstructions for interaction with
<em>Basic Input Output System</em>.</p>
<p>BIOS services run in 16bit real CPU mode and they do not require any operating system.
<br/>BIOS API functions can be used before or after DOS has been loaded, and some of them are usable
<!---->in Windows virtual DOS machine (ntvdm) or similar emulators.</p>
<br clear="all"><pre>
biosapi HEAD  ; Start of interface block includable to other programs.
</pre>

<dl id="pcColors"><dt><a href="#top">&uarr; %Colors</a></dt>
<dd><p>Encoding of colors used in text-mode EGA/VGA display services.
<br/>The required color combination is a sum of foreground (ink) color
<!---->plus background (paper) color left-shifted by 4 bits.</p></dd>
<dt>Example</dt><dd class="PRE"> MOV AH,%Red + %Yellow&lt;&lt;4
</dd></dl><pre>
%Black     %SETA 0000b
%Blue      %SETA 0001b
%Green     %SETA 0010b
%Cyan      %SETA 0011b
%Red       %SETA 0100b
%Magenta   %SETA 0101b
%Brown     %SETA 0110b
%White     %SETA 0111b
%Gray      %SETA 1000b
%BrBlue    %SETA 1001b
%BrGreen   %SETA 1010b
%BrCyan    %SETA 1011b
%BrRed     %SETA 1100b
%BrMagenta %SETA 1101b
%BrYellow  %SETA 1110b
%Yellow    %SETA 1110b
%BrWhite   %SETA 1111b
</pre>

<dl id="BiosAPI"><dt><a href="#top">&uarr; BiosAPI</a> INT=10h, reg1=value1, reg2=value2...</dt>
<dd>Macro <dfn>BiosAPI</dfn> provides interaction with BIOS using software-called interrupts.
</dd>
<dt>Documented</dt><dd><a class="EXTL" href="../eadoc/links.htm#IntList">[IntList]</a></dd>
<dt>Input</dt><dd><b>INT=</b> is the interrupt number, for instance INT=16h for keyboard service.
<!---->Default value INT=10h (videoservice) may be omitted.
<br/><b>regX=valueX</b>. Arbitrary number of keyword parameters can be specified
<!---->and the corresponding 8bit or 16bit general-purpose register or segment register
<!---->will be loaded with its value before the interrupt is called.
<br/>Registers are loaded in the order as specified in the macro invocation.
<br/>Names of registers and the INT= key are case-sensitive but both uppercase and lowercase may be used.</dd>
<dt>Output</dt><dd>Values returned from interrupt service are defined in the documentation.</dd>
<dt>Error</dt><dd>As specified in the documentation.</dd>
<dt>Examples</dt>
<dd>Read 5 sectors starting at sector 2, head 1, cylinder 0
<!---->from floppy disk A: to memory at ES:BX</dd>
<dd class="PRE">       BiosAPI INT=13h,AH=2,AL=5,CL=2,DH=1,CH=0,DL=0</dd>
<dd>Display in red on white 12-byte string addressed by ES:BP
<!---->at row 3, column 5 on the monitor textmode screen:</dd>
<dd class="PRE">       BiosAPI INT=10h,AH=13h,AL=0,BH=0,BL=74h,CX=12,DH=3,DL=5</dd>
<dd>Parameters from previous example, which use 8bit registers, could also be joined to 16 bits.
<!---->Thank to this, BiosAPI expands to slightly shorter but still equivalent code:</dd>
<dd class="PRE">       BiosAPI ax=0x1300,bx=0x0074,CX=12,DX=0x0305 ; will expand to
<!---->          ; MOV ax,0x1300
<!---->          ; MOV bx,0x0074
<!---->          ; MOV CX,12
<!---->          ; MOV DX,0x0305
<!---->          ; INT 10h
</dd>
<dt>See also</dt><dd><a class="EXT" href="dosapi.htm#DosAPI">DosAPI</a></dd>
</dl><pre>
BiosAPI %MACRO INT=10h, \
        AL=,AH=,CL=,CH=,DL=,DH=,BL=,BH=,AX=,CX=,DX=,BX=,BP=,SP=,SI=,DI=,DS=,ES=, \
        al=,ah=,cl=,ch=,dl=,dh=,bl=,bh=,ax=,cx=,dx=,bx=,bp=,sp=,si=,di=,ds=,es=
%intNr  %SET 10h     ; Default if not specified otherwise.
%kwlength %SETA %=#  ; %kwlength is now the number of keyword operands in BiosAPI invocation.
k   %FOR 1..%kwlength
%kw     %SET %=*{%k} ; %kw is now something like AH=5 or INT=16h.
%kwsize %SETS %kw    ; Number of characters in keyword operand %kw.
%key    %SET         ; Split the operand by <kbd>=</kbd> to the %key and %value. Start with empty %key.
%i      %SETA 1      ; Begin with the 1st character.
        %REPEAT
          %IF "%kw[%i]" === "="
            %EXITREPEAT           ; Equal-sign found, the split is done.
          %ELSE
            %key %SET %key%kw[%i] ; Append the %i-th character and continue.
            %i %SETA %i + 1
          %ENDIF
        %UNTIL %i > %kwsize
        %value %SET %kw[%i+1..%&]
        %IF "%key" == "INT"
          %intNr %SET %value ; Save the interrupt number for later to the variable %intNr.
        %ELSE
          %IF "%key"==="" || "%value"===""
             %ERROR ID=5910,'Bad parameter "%key=%value", ignored.'
          %ELSE
            MOV %key,%value  ; Emit the instruction loading the register %key.
          %ENDIF
        %ENDIF
    %ENDFOR k                ; Process the next keyword operand.
    INT %intNr               ; Finally emit the BIOS service call.
  %ENDMACRO BiosAPI
</pre>
<pre>
 ENDHEAD biosapi ; End of interface block.
</pre>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
