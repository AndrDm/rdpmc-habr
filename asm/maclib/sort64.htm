<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='sort64.htm macro library'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>sort64.htm macro library</title>
</head>
<body class='MACLIB' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>sort64.htm
<br/><a href="#ShellSort">ShellSort</a>
</h1>
<p>This OS-independent macrolibrary can be included to 64bit programs written in EuroAssembler.</p>
<p> The library contains macroinstructions which sort data in memory.</p>
<br clear="all">
<pre>
sort64 HEAD
</pre>

<dl id="ShellSort"><dt><a href="#top">ShellSort</a> TablePtr, NrOfRecords, RecordSize, CallbackProc</dt>
<dd>This macro can sort an array of records of the same size using the
<a class="EXTL" href="../eadoc/links.htm#ShellSort">[ShellSort]</a> algorithm.
<!---->The entire array must be loaded in memory
<!---->and it will be sorted <em>in situ</em>.</dd>
<dt>Input</dt><dd><b>TablePtr</b> is pointer to the 1st record of the array.
<br/><b>NrOfRecords</b> is number of records (members) in the array.
<br/><b>RecordSize</b> is the size of one record in bytes.
<!---->Array size = NrOfRecords * RecordSize.
<br/><b>CallbackProc</b> is pointer to the callback procedure which sorts two records.
<dl><dt>CallbackProc</dt><dd>is called with <em>register calling convention</em>.
<br/>It is expected to compare two records and return CF=0 if they are in proper order.
<br/>Otherwise it must swap the contents of these records and return CF=1.</dd>
<dt>Input</dt><dd><b>RSI</b> is pointer to the first record to compare,
<br/><b>RDI</b> is pointer to the second record to compare.
<br/><b>RDX</b> contains the remaining number of records (%ShellSortNrOfRecords), which can be used to show the progress of sorting.</dd>
<dt>Output</dt><dd><b>CF=0</b> if both records were in desired order, or
<br/><b>CF=1</b> if both records were in wrong order, but they were swapped now.
<br/><b>RAX,RDX,RSI,RDI,R8..R15</b> may be changed. Registers RBX,RCX,RBP must be preserved by CallbackProc.</dd>
</dl></dd>
<dt>Output</dt><dd> Registers are preserved.
<dt>Example</dt><dd class="PRE">
<!---->MyTable   DQ 5,1,7,6,3,4,2 ; Unsorted QWORD data.
<!---->          ShellSort MyTable, SIZE# MyTable/8, 8, MyCmpProc
<!---->MyCmpProc PROC1
<!---->           MOV RAX,[RSI]
<!---->           MOV RDX,[RDI]
<!---->           CMP RDX,RAX
<!---->           JNC .Done:    ; Jump if both records are in the desired order.
<!---->           MOV [RSI],RDX ; Otherwise swap them and return CF.
<!---->           MOV [RDI],RAX
<!---->    .Done: RET
<!---->          ENDP1 MyCmpProc</dd>
<dt>Tested by</dt><dd><a class="EXT" href="../prowin64/tmac64.htm">tmac64.htm</a></dd>
</dl><pre>
ShellSort %MACRO TablePtr,NrOfRecords,RecordSize,CallbackProc
     PUSHQ %CallbackProc,%RecordSize,%NrOfRecords,%NrOfRecords,%TablePtr
     CALL ShellSort64@RT::
ShellSort64@RT:: PROC1
      PUSH RAX,RCX,RDX,RBX,RBP,RSI,RDI
      MOV RBP,RSP
%ShellSortTablePtr     %SET RBP+64
%ShellSortNrOfRecords  %SET RBP+72
%ShellSortRecordNr     %SET RBP+80
%ShellSortRecordSize   %SET RBP+88
%ShellSortCallbackProc %SET RBP+96
 .10: SARQ [%ShellSortNrOfRecords],1
      JNG .90:
      MOV RCX,[%ShellSortRecordNr]
      SUB RCX,[%ShellSortNrOfRecords]
      MOV EBX,1
 .20: MOV RSI,RBX
 .30: MOV RDI,RSI
      ADD RDI,[%ShellSortNrOfRecords]
      PUSH RSI,RDI
       MOV RAX,RSI
       DEC RAX
       MULQ [%ShellSortRecordSize]
       ADD RAX,[%ShellSortTablePtr]
       MOV RSI,RAX
       MOV RAX,RDI
       DEC RAX
       MULQ [%ShellSortRecordSize]
       ADD RAX,[%ShellSortTablePtr]
       MOV RDI,RAX
       MOV RDX,[%ShellSortNrOfRecords]
       CALL [%ShellSortCallbackProc]
      POP RDI,RSI
      JNC .40:
      SUB RSI,[%ShellSortNrOfRecords]
      JA .30:
 .40: INC EBX
      CMP EBX,ECX
      JNA .20:
      JMP .10:
 .90: POP RDI,RSI,RBP,RBX,RDX,RCX,RAX
      RET 5*8
    ENDPROC1 ShellSort64@RT::
 %ENDMACRO ShellSort
</pre><pre>
   ENDHEAD sort64
</pre>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
